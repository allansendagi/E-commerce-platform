{"ast":null,"code":"import _objectSpread from \"/Users/AllanSendagi/Desktop/E-commerce-platform/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/E-commerce-platform/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,gBAAjG;AAEA,SAASC,IAAT,EACOC,cADP,EAEOC,yBAFP,QAGY,+BAHZ;AAKA,OAAO,UAAUC,gBAAV,GAA6B;AACnC,MAAI;AAAA,iBACY,MAAMH,IAAI,CAACI,eAAL,CAAqBH,cAArB,CADlB;AAAA,UACII,IADJ,QACIA,IADJ;;AAEH,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACI,mBAAmB;AAAGa,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAApB,CAAT;AACA,GALD,CAKE,OAAMC,KAAN,EAAa;AACd,UAAMnB,GAAG,CAACK,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACA;AACD;AACD,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAV,CAA1B,EAA0D;AAChE,MAAI;AAAA,kBACc,MAAMf,IAAI,CAACgB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CADpB;AAAA,UACKV,IADL,SACKA,IADL;;AAEH,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CACRM,kBAAkB;AAAGW,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EADV,CAAT;AAIA,GARD,CAQE,OAAMC,KAAN,EAAa;AACd,UAAMnB,GAAG,CAACO,kBAAkB,CAACY,KAAD,CAAnB,CAAT;AACA;AACD;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACtC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCf,gBAAvC,CAAhB;AACA;AAED,OAAO,UAAUgB,kBAAV,GAA+B;AACrC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACA;AACD,OAAO,UAAUS,SAAV,GAAsB;AAC5B,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\n\nimport { auth,\n\t      googleProvider, \n\t      createUserProfileDocument\n\t    } from '../../firebase/firebase.utils';\n\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst {user} = yield auth.signInWithPopup(googleProvider);\n\t\tconst userRef = yield call(createUserProfileDocument, user);\n\t\tconst userSnapshot = yield userRef.get();\n\t\tyield put(googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n\t} catch(error) {\n\t\tyield put(googleSignInFailure(error));\n\t}\n}\nexport function* signInWithEmail({payload: { email, password }}) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email,password);\n\t\tconst userRef = yield call(createUserProfileDocument, user);\n\t\tconst userSnapshot = yield userRef.get();\n\t\tyield put(\n\t\t\temailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n\t\t );\n\t\n\t} catch(error) {\n\t\tyield put(emailSignInFailure(error))\n\t}\n}\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle )\n}\n\nexport function* onEmailSignInStart() {\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail )\n}\nexport function* userSagas() {\n\tyield all([call(onGoogleSignInStart)]);\n}"]},"metadata":{},"sourceType":"module"}