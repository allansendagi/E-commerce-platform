{"ast":null,"code":"var _jsxFileName = \"/Users/AllanSendagi/Desktop/E-commerce-platform/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    fetch('https://firestore.googleapis.com/v1/projects/crowndb-276b2/databases/(default)/documents/collections').then(response => response.json()).then(collections => console.log(collections)); // collectionRef.get().then(snapshot => {\n    // \tconst collectionsMap = convertCollectionsSnapShotToMap(snapshot)\n    // \tupdateCollections(collectionsMap);\n    // \tthis.setState({loading: false });\t\n    // });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/E-commerce-platform/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapShotToMap","WithSpinner","updateCollections","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","response","json","collections","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,iBAAT,QAAiC,+BAAjC;AAEA,MAAMC,8BAA8B,GAAGF,WAAW,CAACJ,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGH,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACPC,MAAAA,OAAO,EAAE;AADF,KAD8B;AAAA,SAKtCC,uBALsC,GAKZ,IALY;AAAA;;AAOtCC,EAAAA,iBAAiB,GAAG;AAAA,UACXR,iBADW,GACW,KAAKS,KADhB,CACXT,iBADW;AAEnB,UAAMU,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEAC,IAAAA,KAAK,CAAC,sGAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,WAAW,IAAIC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAFrB,EAJmB,CASnB;AACA;AACA;AACA;AACA;AAGA;;AAGDG,EAAAA,MAAM,GAAG;AAAA,UACAC,KADA,GACU,KAAKX,KADf,CACAW,KADA;AAAA,UAEAd,OAFA,GAEY,KAAKD,KAFjB,CAEAC,OAFA;AAGT,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKc,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGZ,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKW,KAAK,CAACC,IAAX,mBAAX;AACA,MAAA,MAAM,EAAGZ,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CADD;AAQC;;AArCqC;;AAsCtC;;AAED,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACvCvB,EAAAA,iBAAiB,EAAEwB,cAAc,IACjCD,QAAQ,CAACvB,iBAAiB,CAACwB,cAAD,CAAlB;AAF+B,CAAL,CAAnC;;AAKA,eAAe9B,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkCnB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\nimport { updateCollections} from '../../redux/shop/shop.actions';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\tstate = {\n\t\tloading: true\n\t}\n\n\tunsubscribeFromSnapshot = null;\n\n\tcomponentDidMount() {\n\t\tconst { updateCollections } = this.props;\n\t\tconst collectionRef = firestore.collection('collections');\n\n\t\tfetch('https://firestore.googleapis.com/v1/projects/crowndb-276b2/databases/(default)/documents/collections')\n\t\t.then(response => response.json())\n\t\t.then(collections => console.log(collections));\n\n\n\t\t// collectionRef.get().then(snapshot => {\n\t\t// \tconst collectionsMap = convertCollectionsSnapShotToMap(snapshot)\n\t\t// \tupdateCollections(collectionsMap);\n\t\t// \tthis.setState({loading: false });\t\n\t\t// });\n\n\n\t}\n\n\n\trender() {\n\t\tconst { match } = this.props\n\t\tconst { loading } = this.state;\n\treturn (\n\t\t<div className='shop-page'>\n\t\t   <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props}/>} />\n\t\t   <Route path={`${match.path}/:collectionId`} \n\t\t   render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props }/>}\n\t\t   />\n\t    </div>\n\t  )\n\t}\n};\n\nconst mapDispatchToProps = dispatch => ({\n\tupdateCollections: collectionsMap => \n\tdispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}